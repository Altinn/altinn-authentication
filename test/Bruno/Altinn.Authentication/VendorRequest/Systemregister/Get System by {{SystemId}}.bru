meta {
  name: Get System by {{SystemId}}
  type: http
  seq: 2
}

get {
  url: {{baseUrl}}/authentication/api/v1/systemregister/vendor/{{systemId}}
  body: none
  auth: inherit
}

vars:pre-request {
  systemId: 
  Sneha Sirure
    1:54 PM
  12605031_E2E test - urn:altinn:accesspackage:revisormedarbeiderAnsvarlig Revisor005c1a0d-b27d-45cc-b092-54882767dcb7
  ~systemId: 312605031_78f336c7-3a71-4910-b131-9e42f086d6c9
  ~systemId: 312605031_AlleRelevanteKlientDelegeringsPakker
  ~systemId: 310574775_TwoRedirectUrlsTest
  ~systemId: 312605031_e78335f7-930f-4412-9dd9-223d65c12eec
  ~systemId: 310574775_06f500ea-7039-41ad-863e-3bb057939acc
  ~systemId: 310574775_SystemIdWithSingleRightAndAccessPackagesAndApp
  ~systemId: 310574775_UrlQueryPathTesIsvisibleTest
}

script:pre-request {
  const TestToolsTokenGenerator = require("./TestToolsTokenGenerator.js");
  const { v4: uuidv4} = require('uuid')
  
  //Set token type
  bru.setEnvVar("auth_tokenType","Enterprise");
  bru.setEnvVar("auth_scopes","altinn:authentication/systemregister");
  
  bru.setEnvVar("auth_orgNo","312605031");
  bru.setEnvVar("auth_org", "312605031");
  
  // const systemName = "QueryParamMustWorkSingle"
  // 
  
  
  bru.setEnvVar("system_name","TÃ¸ysekopp");
  
  var token = await TestToolsTokenGenerator.getToken(); // Fetch and store the token
  bru.setEnvVar("bearer_token", token);
  console.log(token)
  
  const auth_orgNo = bru.getEnvVar("auth_orgNo"); // Retrieve it from the environment
  const system_name = bru.getEnvVar("system_name"); // Retrieve system_name as well
  console.log(system_name)
  
  // bru.setEnvVar("system_id", `${auth_orgNo}_${system_name}`);
  
}
