meta {
  name: Create System in System Register
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/authentication/api/v1/systemregister/vendor
  body: json
  auth: inherit
}

body:json {
  {
    "Id": "{{auth_org}}_{{system_name}}",
    "Vendor": {
      "ID": "0192:{{auth_org}}"
    },
    "Name": {
      "en": "System med action read",
      "nb": "System med actions",
      "nn": "System med actions"
    },
    "Description": {
      "en": "This is auto generated by an integration test. Some data is randomized, but some is not - like this description",
      "nb": "Integrasjonstest. Noe er randomisert her, men mye blir likt.",
      "nn": "integrasjonstest p√• nynorsk. Noe er randomisert her, men mye blir likt."
    },
    "accessPackages": [ 
      { "urn": "urn:altinn:accesspackage:skattnaering" } ],
    "allowedRedirectUrls": [
      "https://altinn.no"
    ],
    "isVisible": false,
    "ClientId": [
      "{{system_name}}"
    ]
  }
}

script:pre-request {
  const TestToolsTokenGenerator = require("./TestToolsTokenGenerator.js");
  const { v4: uuidv4} = require('uuid')
  
  //Set token type
  bru.setEnvVar("auth_tokenType","Enterprise");
  bru.setEnvVar("auth_scopes","altinn:authentication/systemregister.write");
  
  bru.setEnvVar("auth_orgNo","310574775");
  bru.setEnvVar("auth_org", "310574775");
  
  const systemName = uuidv4();
  bru.setEnvVar("system_name",systemName);
  
  console.log(bru.getEnvVar("auth_tokenType"));
  
  var token = await TestToolsTokenGenerator.getToken(); // Fetch and store the token
  bru.setEnvVar("bearer_token", token);
  
}
