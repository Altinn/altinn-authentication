meta {
  name: Create System with Access Package
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/authentication/api/v1/systemregister/vendor
  body: json
  auth: inherit
}

body:json {
  {
    "Id": "{{system_id}}",
    "Vendor": {
      "ID": "0192:{{auth_org}}"
    },
    "Name": {
      "en": "{{system_name}}",
      "nb": "{{system_name}}",
      "nn": "{{system_name}}"
    },
    "Description": {
      "en": "{{description}}",
      "nb": "{{description}}",
      "nn": "{{description}}"
    },
    "allowedRedirectUrls": [
      "https://fiken.no"
    ],
    "accessPackage" : {
      "packageId": ["urn:altinn:accesspackage:forretningsforer-eiendom"]
    },
    "isVisible": true,
    "ClientId": [
      "{{system_name}}"
    ]
  }
}

script:pre-request {
  const TestToolsTokenGenerator = require("./TestToolsTokenGenerator.js");
  const { v4: uuidv4} = require('uuid')
  
  //Set token type
  bru.setEnvVar("auth_tokenType","Enterprise");
  bru.setEnvVar("auth_scopes","altinn:authentication/systemregister.write");
  
  bru.setEnvVar("auth_orgNo","314126181");
  bru.setEnvVar("auth_org", "314126181");
  
  //Test js input
  const systemName = "HEI SYSTEM 22"
  const description = "<div id='xss-test'></div><script>document.getElementById('xss-test').innerHTML='<img src=x onerror=alert(`ðŸ’¥`)> 1'</script>";
  
  bru.setEnvVar("system_name",systemName);
  bru.setEnvVar("description",description);
  
  var token = await TestToolsTokenGenerator.getToken(); // Fetch and store the token
  bru.setEnvVar("bearer_token", token);
  
  
  
  const auth_orgNo = bru.getEnvVar("auth_orgNo"); // Retrieve it from the environment
  const system_name = bru.getEnvVar("system_name"); // Retrieve system_name as well
  
  
  bru.setEnvVar("system_id", `${auth_orgNo}_${system_name}`);
  
}

docs {
  SystemId med tilgangspakke i AT22:
  - 310574775_KlientDelegeringManuellTest: urn:altinn:accesspackage:skattnaering" (isVisible: false)
}
